<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.hrms.storage.AuthorityReadWrite" >
  <resultMap id="BaseResultMap" type="org.hrms.domain.Authority" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="authorityName" property="authorityName" jdbcType="VARCHAR" />
    <result column="authorityCode" property="authorityCode" jdbcType="VARCHAR" />
    <result column="authorityUrl" property="authorityUrl" jdbcType="VARCHAR" />
    <result column="defaultAuthority" property="defaultAuthority" jdbcType="BOOLEAN" />
    <result column="accessAuthentication" property="accessAuthentication" jdbcType="BOOLEAN" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="BIGINT" />
    <result column="updateTime" property="updateTime" jdbcType="BIGINT" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, authorityName, authorityCode, authorityUrl, defaultAuthority, accessAuthentication, state, createTime, updateTime, creator
  </sql>
  <insert id="insert" parameterType="org.hrms.domain.Authority" useGeneratedKeys="true" keyProperty="id">
    insert into authority
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="authorityName != null" >
        authorityName,
      </if>
      <if test="authorityCode != null" >
        authorityCode,
      </if>
      <if test="authorityUrl != null" >
        authorityUrl,
      </if>
      <if test="defaultAuthority != null" >
        defaultAuthority,
      </if>
      <if test="accessAuthentication != null" >
        accessAuthentication,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="creator != null" >
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="authorityName != null" >
        #{authorityName,jdbcType=VARCHAR},
      </if>
      <if test="authorityCode != null" >
        #{authorityCode,jdbcType=VARCHAR},
      </if>
      <if test="authorityUrl != null" >
        #{authorityUrl,jdbcType=VARCHAR},
      </if>
      <if test="defaultAuthority != null" >
        #{defaultAuthority,jdbcType=BOOLEAN},
      </if>
      <if test="accessAuthentication != null" >
        #{accessAuthentication,jdbcType=BOOLEAN},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="batchInsert" useGeneratedKeys="true" keyProperty="id">
		insert into authority (authorityName, authorityCode,authorityUrl, defaultAuthority, accessAuthentication, state, createTime,updateTime, creator) values
		<foreach collection="list" item="item" separator=",">
		(#{item.authorityName,jdbcType=VARCHAR}, #{item.authorityCode,jdbcType=VARCHAR}, 
      #{item.authorityUrl,jdbcType=VARCHAR}, #{item.defaultAuthority,jdbcType=BOOLEAN},#{item.accessAuthentication,jdbcType=BOOLEAN},
      #{item.state,jdbcType=VARCHAR}, #{item.createTime,jdbcType=BIGINT}, 
      #{item.updateTime,jdbcType=BIGINT}, #{item.creator,jdbcType=VARCHAR})
		</foreach>
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from authority where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteInByPrimaryKey">
  	delete from authority where id in (
  	<foreach collection="list" item="item" separator=",">
  	#{item}
  	</foreach>
  	)
  </delete>
  <delete id="deleteByAttribute" parameterType="org.hrms.common.search.Attribute" >
    delete from authority where ${name} = #{value}
  </delete>
  <update id="updateByPrimaryKey" parameterType="org.hrms.domain.Authority" >
    update authority
    <set >
      <if test="authorityName != null" >
        authorityName = #{authorityName,jdbcType=VARCHAR},
      </if>
      <if test="authorityCode != null" >
        authorityCode = #{authorityCode,jdbcType=VARCHAR},
      </if>
      <if test="authorityUrl != null" >
        authorityUrl = #{authorityUrl,jdbcType=VARCHAR},
      </if>
      <if test="defaultAuthority != null" >
        defaultAuthority = #{defaultAuthority,jdbcType=BOOLEAN},
      </if>
      <if test="accessAuthentication != null" >
        accessAuthentication = #{accessAuthentication,jdbcType=BOOLEAN},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from authority
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByAttribute" resultType="java.lang.Integer" parameterType="org.hrms.common.search.Attribute" >
    select count(id) from authority 
          <where>
	  	<if test="value != null">
	  		${name} 
	  		<choose>
	  			<when test="likePattern == true">
	  				like
	  			</when>
	  			<otherwise>
	  			=
	  			</otherwise>
	  		</choose>
	  		  #{value}
	  	</if>
	  </where>
  </select>
  <select id="selectByAttribute" resultMap="BaseResultMap" parameterType="org.hrms.common.search.Attribute" >
    select <include refid="Base_Column_List" /> from authority 
    <where>
  	<if test="name != null">
  		${name} = #{value}
  	</if>
  </where>
  </select>
  <select id="selectByAttributes" resultMap="BaseResultMap" parameterType="org.hrms.common.search.Attribute" >
    select <include refid="Base_Column_List" /> from authority
    <where>
  	<if test="name != null">
  		${name} = #{value}
  	</if>
  </where>
  </select>
  <select id="pageingSearch" 
  parameterType="org.hrms.common.search.Pageing" 
  resultMap="BaseResultMap">
  select * from authority 
  <where>
  	<if test="keywords.value != null">
  		authorityName like #{keywords.value}
  	</if>
  </where>
  limit #{startIndex},#{pageSize}
  </select>
  <select id="selectAccountAuthorityByAccountId" resultMap="BaseResultMap">
  	select a.* from account_authority aa inner join authority a on aa.authorityId = a.id where aa.accountId=#{id}
  </select>
</mapper>